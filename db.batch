http://localhost:8090/user?uid=tj110
http://localhost:8090/problem?pid=1
http://localhost:8090/contest?cid=1
http://localhost:8090/login?username=white&&password=123

http://localhost:8090/scontestinfo?cid=1


db.user.drop();
db.problem.drop();
db.contest.drop();
db.contestproblemlist.drop()
db.submitqueue.drop()
db.runtimestatus.drop()

db.user.insert({uid:'tj110', username:'white', password:'123', nickname:'nickname', ischallenger:false, score:1.00, privilege:'admin'});
db.problem.insert({pid:1, title:'title1', description:'des', time:'1', memory:"1000", input:"input", output:"output", simpleinput:"sinput", simpleoutput:'soutput', "solved":10, "display":false});
db.problem.insert({pid:2, title:'title2', description:'des', time:'1', memory:"1000", input:"input", output:"output", simpleinput:"sinput", simpleoutput:'soutput', "solved":10, "display":false});
db.problem.insert({pid:3, title:'title3', description:'des', time:'1', memory:"1000", input:"input", output:"output", simpleinput:"sinput", simpleoutput:'soutput', "solved":10, "display":false});
db.problem.insert({pid:4, title:'title4', description:'des', time:'1', memory:"1000", input:"input", output:"output", simpleinput:"sinput", simpleoutput:'soutput', "solved":10, "display":false});
db.contest.insert({cid:1, contestname:'Test contest', problemlist:'1;2;3;4', starttime:1385131172, endtime: 1385132172});
db.contestproblemlist.insert({cid:1, pid:1, solved:2, score: 10});
db.contestproblemlist.insert({cid:1, pid:2, solved:2, score: 10});
db.contestproblemlist.insert({cid:1, pid:3, solved:2, score: 10});
db.contestproblemlist.insert({cid:1, pid:4, solved:2, score: 10});
db.submitqueue.insert({"pid":1, "code":"#include <stdio.h>\r\nint main() {\r\nreturn 0;\r\n}", "lang":"C"});
db.runtimestatus.insert({pid:2, "_index" : "578a0e70c199c609ad738ca1", status:"pending", memory:"pending", time:"pending", code:"#include <stdio\r\nint main() {\r\nreturn 0;\r\n}", lang:"c"});



type Problem struct {
	PID          string
	Title        string `bson:"title" json:"title"`
	Description  string `bson:"description" json:"description"`
	Time         string `bson:"time" json:"time"`
	Memory       string `bson:"memory" json:"memory"`
	SimpleInput  string `bson:"simpleinput" json:"simpleinput"`
	SimpleOutput string `bson:"simpleoutput" json:"simpleoutput"`
	Display      bool
}

type User struct {
	UID          string
	Username     string `bson:"username" json:"username"`
	Password     string `bson:"password" json:"password"`
	Nickname     string `bson:"nickname" json:"nickname"`
	IsChallenger bool
	Score        float64
	Privilege    string `bson:"privilege" json:"privilege"`
}

type Contest struct {
	CID string
	// pid1;pid2;pid3
	ProblemList string `bson:"problemlist" json:"problemlist"`
	StartTime   int64
	EndTime     int64
}

type RuntimeStatus struct {
	PID    int64  `bson:"pid" json:"pid"`
	Status string `bson:"status" json:"status"`
	Code   string `bson:"code" json:"code"`
	Memory string `bson:"memory" json:"memory"`
	Time   string `bson:"time" json:"time"`
	Lang   string `bson:"lang" json:"lang"`
}

#include <stdio.h>
int main() {
return 0;
}
